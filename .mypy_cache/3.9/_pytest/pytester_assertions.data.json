{".class": "MypyFile", "_fullname": "_pytest.pytester_assertions", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "CollectReport": {".class": "SymbolTableNode", "cross_ref": "_pytest.reports.CollectReport", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "TestReport": {".class": "SymbolTableNode", "cross_ref": "_pytest.reports.TestReport", "kind": "Gdef"}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "_pytest.pytester_assertions.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "_pytest.pytester_assertions.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "_pytest.pytester_assertions.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "_pytest.pytester_assertions.__package__", "name": "__package__", "type": "builtins.str"}}, "assert_outcomes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1, 1], "arg_names": ["outcomes", "passed", "skipped", "failed", "errors", "xpassed", "xfailed"], "flags": [], "fullname": "_pytest.pytester_assertions.assert_outcomes", "name": "assert_outcomes", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1], "arg_names": ["outcomes", "passed", "skipped", "failed", "errors", "xpassed", "xfailed"], "arg_types": [{".class": "Instance", "args": ["builtins.str", "builtins.int"], "type_ref": "builtins.dict"}, "builtins.int", "builtins.int", "builtins.int", "builtins.int", "builtins.int", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "assert_outcomes", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "assertoutcome": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["outcomes", "passed", "skipped", "failed"], "flags": [], "fullname": "_pytest.pytester_assertions.assertoutcome", "name": "assertoutcome", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["outcomes", "passed", "skipped", "failed"], "arg_types": [{".class": "TupleType", "implicit": false, "items": [{".class": "Instance", "args": ["_pytest.reports.TestReport"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["_pytest.reports.CollectReport", "_pytest.reports.TestReport"]}], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["_pytest.reports.CollectReport", "_pytest.reports.TestReport"]}], "type_ref": "typing.Sequence"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "builtins.int", "builtins.int", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "assertoutcome", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}}, "path": "/home/patrick/anaconda3/lib/python3.9/site-packages/_pytest/pytester_assertions.py"}